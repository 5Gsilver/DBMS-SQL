RDBMS : 관계형 데이터베이스
기본단위가 테이블
테이블 : (가로, 세로를) 행, 칼럼으로 이루어진 표 형식 데이터 저장방식
행과 칼럼이 겹치는 공간 : 필드(field)


테이블을 만들어야 데이터를 입력할 수 있다.
테이블 만들 때 '칼럼'을 생성해야 하고, 데이터 형식/제약조건 사용자가 정의한다.
칼럼이 만들어진 이후에 행에 데이터가 들어간다. [칼럼 -> 행]


DDL : 데이터베이스, 테이블 생성/추가/삭제
- 칼럼에 대한 조건, 형식 (행 데이터X)

[DDL명령어 database/table db/테이블명 설정]

* create
create table `article`(
	`a` int not null
	`b` text
	`c` float
);

* alter
alter table `article` add column `d` int;
alter table `article` drop column `d`;
alter table `article` modify `d` char(10);
alter table `article` rename to `writing`;

* drop
drop table `article`;


--
DML : 테이블 내 데이터

[DML명령어 테이블명 ~~]

insert into 테이블명
set 칼럼명 = '데이터';

insert into `article`
set `a` = 10
, `b` = '강아지'
, `c` = 2.3;


update  테이블명
set 칼럼명 = '데이터'
where 칼럼명 = '데이터';

update `article`
set `a` = 20
where `a` = 10;


delete from 테이블명
where 칼럼명 = '데이터';

delete from `article`
where `a` = 10;
# 해당하는 행 전체를 삭제

select 칼럼명 from 테이블명;

select `a` from `article`;
# 10 20 30 12

---
'고유키' : 데이터마다 고유식별번호
데이터는 중복이 함부로 되면 안된다. 유일한 데이터로 저장.
'id' 명칭을 주로 사용한다.

'게시글'이란 데이터를 만든다면
칼럼 : id / title/ body/ writer/ hit/ like/ reply/ ...

다른 건 다 중복가능해도, 고유키인 id만큼은 절대 중복X


--
<제약조건> 칼럼에 거는 것
unique : 가지는 데이터 중복 X
not null : 빈 필드 X
unsigned : int 데이터를 양수만 넣는다
auto_increment : 데이터 생성 시 정수값 자동증가해서 입력
primary key : 주키 = 고유식별번호(unique, not null, ... 포함). 테이블에 1개만 가능

=> 데이터 효율성 -> 비용과 직결되기 때문


- 제약조건 문법적 순서는 'describe 테이블명'; 쿼리에 나온 순서대로 하면 오류 없다.

게시글이 작성이 되면 자동으로 고유번호 부여.
작성자가 자신의 글이 몇번 글인지 알 필요없고, 알지도 못하고, 부여도 못한다.


--
<where절>
[where 칼럼명 = '데이터']
[where 칼럼명 is null] #null 체크 (null이냐 아니냐)

--
limit
쿼리가 실행할 행의 개수 제한. 순차적으로.


--
<함수>
함수 : 입력한 데이터 -> 출력되는 데이터
select / where/ order by절에 사용가능

함수종류 : NOW(), CURDATE(), LOWER(), UPPER()

연산 : 더하기, 빼기, 곱하기, 나누기, 평균, 분산, 표준편차

* select 문법적 규칙을 지켜주기 위해서 DUAL이라는 더미 테이블이 sql에 내장되어 있다.
